#ifndef   PURRR_INPUT_H_
#define   PURRR_INPUT_H_

// https://www.glfw.org/docs/3.3/group__keys.html
typedef enum {
  PURRR_KEY_SPACE                =  32,
  PURRR_KEY_APOSTROPHE           =  39,
  PURRR_KEY_COMMA                =  44,
  PURRR_KEY_MINUS                =  45,
  PURRR_KEY_PERIOD               =  46,
  PURRR_KEY_SLASH                =  47,
  PURRR_KEY_0                    =  48,
  PURRR_KEY_1                    =  49,
  PURRR_KEY_2                    =  50,
  PURRR_KEY_3                    =  51,
  PURRR_KEY_4                    =  52,
  PURRR_KEY_5                    =  53,
  PURRR_KEY_6                    =  54,
  PURRR_KEY_7                    =  55,
  PURRR_KEY_8                    =  56,
  PURRR_KEY_9                    =  57,
  PURRR_KEY_SEMICOLON            =  59,
  PURRR_KEY_EQUAL                =  61,
  PURRR_KEY_A                    =  65,
  PURRR_KEY_B                    =  66,
  PURRR_KEY_C                    =  67,
  PURRR_KEY_D                    =  68,
  PURRR_KEY_E                    =  69,
  PURRR_KEY_F                    =  70,
  PURRR_KEY_G                    =  71,
  PURRR_KEY_H                    =  72,
  PURRR_KEY_I                    =  73,
  PURRR_KEY_J                    =  74,
  PURRR_KEY_K                    =  75,
  PURRR_KEY_L                    =  76,
  PURRR_KEY_M                    =  77,
  PURRR_KEY_N                    =  78,
  PURRR_KEY_O                    =  79,
  PURRR_KEY_P                    =  80,
  PURRR_KEY_Q                    =  81,
  PURRR_KEY_R                    =  82,
  PURRR_KEY_S                    =  83,
  PURRR_KEY_T                    =  84,
  PURRR_KEY_U                    =  85,
  PURRR_KEY_V                    =  86,
  PURRR_KEY_W                    =  87,
  PURRR_KEY_X                    =  88,
  PURRR_KEY_Y                    =  89,
  PURRR_KEY_Z                    =  90,
  PURRR_KEY_LEFT_BRACKET         =  91,
  PURRR_KEY_BACKSLASH            =  92,
  PURRR_KEY_RIGHT_BRACKET        =  93,
  PURRR_KEY_GRAVE_ACCENT         =  96,
  PURRR_KEY_WORLD_1              = 161,
  PURRR_KEY_WORLD_2              = 162,
  PURRR_KEY_ESCAPE               = 256,
  PURRR_KEY_ENTER                = 257,
  PURRR_KEY_TAB                  = 258,
  PURRR_KEY_BACKSPACE            = 259,
  PURRR_KEY_INSERT               = 260,
  PURRR_KEY_DELETE               = 261,
  PURRR_KEY_RIGHT                = 262,
  PURRR_KEY_LEFT                 = 263,
  PURRR_KEY_DOWN                 = 264,
  PURRR_KEY_UP                   = 265,
  PURRR_KEY_PAGE_UP              = 266,
  PURRR_KEY_PAGE_DOWN            = 267,
  PURRR_KEY_HOME                 = 268,
  PURRR_KEY_END                  = 269,
  PURRR_KEY_CAPS_LOCK            = 280,
  PURRR_KEY_SCROLL_LOCK          = 281,
  PURRR_KEY_NUM_LOCK             = 282,
  PURRR_KEY_PRINT_SCREEN         = 283,
  PURRR_KEY_PAUSE                = 284,
  PURRR_KEY_F1                   = 290,
  PURRR_KEY_F2                   = 291,
  PURRR_KEY_F3                   = 292,
  PURRR_KEY_F4                   = 293,
  PURRR_KEY_F5                   = 294,
  PURRR_KEY_F6                   = 295,
  PURRR_KEY_F7                   = 296,
  PURRR_KEY_F8                   = 297,
  PURRR_KEY_F9                   = 298,
  PURRR_KEY_F10                  = 299,
  PURRR_KEY_F11                  = 300,
  PURRR_KEY_F12                  = 301,
  PURRR_KEY_F13                  = 302,
  PURRR_KEY_F14                  = 303,
  PURRR_KEY_F15                  = 304,
  PURRR_KEY_F16                  = 305,
  PURRR_KEY_F17                  = 306,
  PURRR_KEY_F18                  = 307,
  PURRR_KEY_F19                  = 308,
  PURRR_KEY_F20                  = 309,
  PURRR_KEY_F21                  = 310,
  PURRR_KEY_F22                  = 311,
  PURRR_KEY_F23                  = 312,
  PURRR_KEY_F24                  = 313,
  PURRR_KEY_F25                  = 314,
  PURRR_KEY_KP_0                 = 320,
  PURRR_KEY_KP_1                 = 321,
  PURRR_KEY_KP_2                 = 322,
  PURRR_KEY_KP_3                 = 323,
  PURRR_KEY_KP_4                 = 324,
  PURRR_KEY_KP_5                 = 325,
  PURRR_KEY_KP_6                 = 326,
  PURRR_KEY_KP_7                 = 327,
  PURRR_KEY_KP_8                 = 328,
  PURRR_KEY_KP_9                 = 329,
  PURRR_KEY_KP_DECIMAL           = 330,
  PURRR_KEY_KP_DIVIDE            = 331,
  PURRR_KEY_KP_MULTIPLY          = 332,
  PURRR_KEY_KP_SUBTRACT          = 333,
  PURRR_KEY_KP_ADD               = 334,
  PURRR_KEY_KP_ENTER             = 335,
  PURRR_KEY_KP_EQUAL             = 336,
  PURRR_KEY_LEFT_SHIFT           = 340,
  PURRR_KEY_LEFT_CONTROL         = 341,
  PURRR_KEY_LEFT_ALT             = 342,
  PURRR_KEY_LEFT_SUPER           = 343,
  PURRR_KEY_RIGHT_SHIFT          = 344,
  PURRR_KEY_RIGHT_CONTROL        = 345,
  PURRR_KEY_RIGHT_ALT            = 346,
  PURRR_KEY_RIGHT_SUPER          = 347,
  PURRR_KEY_MENU                 = 348,
} purrr_key_t;

// https://www.glfw.org/docs/3.3/group__buttons.html
typedef enum {
  PURRR_MOUSE_BUTTON_1           = 0,
  PURRR_MOUSE_BUTTON_2           = 1,
  PURRR_MOUSE_BUTTON_3           = 2,
  PURRR_MOUSE_BUTTON_4           = 3,
  PURRR_MOUSE_BUTTON_5           = 4,
  PURRR_MOUSE_BUTTON_6           = 5,
  PURRR_MOUSE_BUTTON_7           = 6,
  PURRR_MOUSE_BUTTON_8           = 7,
  PURRR_MOUSE_BUTTON_LEFT        = PURRR_MOUSE_BUTTON_1,
  PURRR_MOUSE_BUTTON_RIGHT       = PURRR_MOUSE_BUTTON_2,
  PURRR_MOUSE_BUTTON_MIDDLE      = PURRR_MOUSE_BUTTON_3,
} purrr_mouse_button_t;

typedef enum {
  PURRR_CURSOR_MODE_NORMAL = 0,
  PURRR_CURSOR_MODE_HIDDEN,
  PURRR_CURSOR_MODE_DISABLED,
} purrr_cursor_mode_t;

bool purrr_window_is_key_down(purrr_window_t *window, purrr_key_t key);
bool purrr_window_is_key_up(purrr_window_t *window, purrr_key_t key);

bool purrr_window_is_mouse_button_down(purrr_window_t *window, purrr_mouse_button_t button);
bool purrr_window_is_mouse_button_up(purrr_window_t *window, purrr_mouse_button_t button);

void purrr_window_get_cursor_pos(purrr_window_t *window, double *xpos, double *ypos);
void purrr_window_set_cursor_mode(purrr_window_t *window, purrr_cursor_mode_t mode);

#endif // PURRR_INPUT_H_

/*
 * TODO( #1): Add support for joysticks
 * TODO( #2): Add support for custom cursors
 * TODO( #3): Add support for scoll (I am too lazy to do it rn)
 */